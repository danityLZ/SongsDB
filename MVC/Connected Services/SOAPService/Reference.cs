//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.SOAPService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SOAPService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WcfService.CompositeType GetDataUsingDataContract(WcfService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WcfService.CompositeType> GetDataUsingDataContractAsync(WcfService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongs", ReplyAction="http://tempuri.org/IService1/GetSongsResponse")]
        ApplicationService.DTOs.SongDTO[] GetSongs(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongs", ReplyAction="http://tempuri.org/IService1/GetSongsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO[]> GetSongsAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongById", ReplyAction="http://tempuri.org/IService1/GetSongByIdResponse")]
        ApplicationService.DTOs.SongDTO GetSongById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSongById", ReplyAction="http://tempuri.org/IService1/GetSongByIdResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO> GetSongByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSong", ReplyAction="http://tempuri.org/IService1/PostSongResponse")]
        string PostSong(ApplicationService.DTOs.SongDTO songDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostSong", ReplyAction="http://tempuri.org/IService1/PostSongResponse")]
        System.Threading.Tasks.Task<string> PostSongAsync(ApplicationService.DTOs.SongDTO songDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutSong", ReplyAction="http://tempuri.org/IService1/PutSongResponse")]
        string PutSong(ApplicationService.DTOs.SongDTO songDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutSong", ReplyAction="http://tempuri.org/IService1/PutSongResponse")]
        System.Threading.Tasks.Task<string> PutSongAsync(ApplicationService.DTOs.SongDTO songDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSong", ReplyAction="http://tempuri.org/IService1/DeleteSongResponse")]
        string DeleteSong(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSong", ReplyAction="http://tempuri.org/IService1/DeleteSongResponse")]
        System.Threading.Tasks.Task<string> DeleteSongAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        ApplicationService.DTOs.UserDTO[] GetUsers(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.UserDTO[]> GetUsersAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsersById", ReplyAction="http://tempuri.org/IService1/GetUsersByIdResponse")]
        ApplicationService.DTOs.UserDTO GetUsersById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsersById", ReplyAction="http://tempuri.org/IService1/GetUsersByIdResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.UserDTO> GetUsersByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostUser", ReplyAction="http://tempuri.org/IService1/PostUserResponse")]
        string PostUser(ApplicationService.DTOs.UserDTO userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostUser", ReplyAction="http://tempuri.org/IService1/PostUserResponse")]
        System.Threading.Tasks.Task<string> PostUserAsync(ApplicationService.DTOs.UserDTO userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutUser", ReplyAction="http://tempuri.org/IService1/PutUserResponse")]
        string PutUser(ApplicationService.DTOs.UserDTO userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutUser", ReplyAction="http://tempuri.org/IService1/PutUserResponse")]
        System.Threading.Tasks.Task<string> PutUserAsync(ApplicationService.DTOs.UserDTO userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        string DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<string> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRatings", ReplyAction="http://tempuri.org/IService1/GetRatingsResponse")]
        ApplicationService.DTOs.RatingDTO[] GetRatings(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRatings", ReplyAction="http://tempuri.org/IService1/GetRatingsResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.RatingDTO[]> GetRatingsAsync(string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRatingsById", ReplyAction="http://tempuri.org/IService1/GetRatingsByIdResponse")]
        ApplicationService.DTOs.RatingDTO GetRatingsById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRatingsById", ReplyAction="http://tempuri.org/IService1/GetRatingsByIdResponse")]
        System.Threading.Tasks.Task<ApplicationService.DTOs.RatingDTO> GetRatingsByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostRating", ReplyAction="http://tempuri.org/IService1/PostRatingResponse")]
        string PostRating(ApplicationService.DTOs.RatingDTO ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostRating", ReplyAction="http://tempuri.org/IService1/PostRatingResponse")]
        System.Threading.Tasks.Task<string> PostRatingAsync(ApplicationService.DTOs.RatingDTO ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutRating", ReplyAction="http://tempuri.org/IService1/PutRatingResponse")]
        string PutRating(ApplicationService.DTOs.RatingDTO ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutRating", ReplyAction="http://tempuri.org/IService1/PutRatingResponse")]
        System.Threading.Tasks.Task<string> PutRatingAsync(ApplicationService.DTOs.RatingDTO ratingDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRating", ReplyAction="http://tempuri.org/IService1/DeleteRatingResponse")]
        string DeleteRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteRating", ReplyAction="http://tempuri.org/IService1/DeleteRatingResponse")]
        System.Threading.Tasks.Task<string> DeleteRatingAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVC.SOAPService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVC.SOAPService.IService1>, MVC.SOAPService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WcfService.CompositeType GetDataUsingDataContract(WcfService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WcfService.CompositeType> GetDataUsingDataContractAsync(WcfService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public ApplicationService.DTOs.SongDTO[] GetSongs(string filter) {
            return base.Channel.GetSongs(filter);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO[]> GetSongsAsync(string filter) {
            return base.Channel.GetSongsAsync(filter);
        }
        
        public ApplicationService.DTOs.SongDTO GetSongById(int id) {
            return base.Channel.GetSongById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.SongDTO> GetSongByIdAsync(int id) {
            return base.Channel.GetSongByIdAsync(id);
        }
        
        public string PostSong(ApplicationService.DTOs.SongDTO songDto) {
            return base.Channel.PostSong(songDto);
        }
        
        public System.Threading.Tasks.Task<string> PostSongAsync(ApplicationService.DTOs.SongDTO songDto) {
            return base.Channel.PostSongAsync(songDto);
        }
        
        public string PutSong(ApplicationService.DTOs.SongDTO songDto) {
            return base.Channel.PutSong(songDto);
        }
        
        public System.Threading.Tasks.Task<string> PutSongAsync(ApplicationService.DTOs.SongDTO songDto) {
            return base.Channel.PutSongAsync(songDto);
        }
        
        public string DeleteSong(int id) {
            return base.Channel.DeleteSong(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteSongAsync(int id) {
            return base.Channel.DeleteSongAsync(id);
        }
        
        public ApplicationService.DTOs.UserDTO[] GetUsers(string filter) {
            return base.Channel.GetUsers(filter);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.UserDTO[]> GetUsersAsync(string filter) {
            return base.Channel.GetUsersAsync(filter);
        }
        
        public ApplicationService.DTOs.UserDTO GetUsersById(int id) {
            return base.Channel.GetUsersById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.UserDTO> GetUsersByIdAsync(int id) {
            return base.Channel.GetUsersByIdAsync(id);
        }
        
        public string PostUser(ApplicationService.DTOs.UserDTO userDto) {
            return base.Channel.PostUser(userDto);
        }
        
        public System.Threading.Tasks.Task<string> PostUserAsync(ApplicationService.DTOs.UserDTO userDto) {
            return base.Channel.PostUserAsync(userDto);
        }
        
        public string PutUser(ApplicationService.DTOs.UserDTO userDto) {
            return base.Channel.PutUser(userDto);
        }
        
        public System.Threading.Tasks.Task<string> PutUserAsync(ApplicationService.DTOs.UserDTO userDto) {
            return base.Channel.PutUserAsync(userDto);
        }
        
        public string DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public ApplicationService.DTOs.RatingDTO[] GetRatings(string filter) {
            return base.Channel.GetRatings(filter);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.RatingDTO[]> GetRatingsAsync(string filter) {
            return base.Channel.GetRatingsAsync(filter);
        }
        
        public ApplicationService.DTOs.RatingDTO GetRatingsById(int id) {
            return base.Channel.GetRatingsById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationService.DTOs.RatingDTO> GetRatingsByIdAsync(int id) {
            return base.Channel.GetRatingsByIdAsync(id);
        }
        
        public string PostRating(ApplicationService.DTOs.RatingDTO ratingDto) {
            return base.Channel.PostRating(ratingDto);
        }
        
        public System.Threading.Tasks.Task<string> PostRatingAsync(ApplicationService.DTOs.RatingDTO ratingDto) {
            return base.Channel.PostRatingAsync(ratingDto);
        }
        
        public string PutRating(ApplicationService.DTOs.RatingDTO ratingDto) {
            return base.Channel.PutRating(ratingDto);
        }
        
        public System.Threading.Tasks.Task<string> PutRatingAsync(ApplicationService.DTOs.RatingDTO ratingDto) {
            return base.Channel.PutRatingAsync(ratingDto);
        }
        
        public string DeleteRating(int id) {
            return base.Channel.DeleteRating(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteRatingAsync(int id) {
            return base.Channel.DeleteRatingAsync(id);
        }
    }
}
